definitions:
  domain.CanonicalOrderBooksResult:
    properties:
      base:
        type: string
      pool_id:
        type: integer
      quote:
        type: string
    type: object
  domain.Token:
    properties:
      coingeckoId:
        type: string
      decimals:
        description: Precision is the precision of the token.
        type: integer
      preview:
        description: IsUnlisted is true if the token is unlisted.
        type: boolean
      symbol:
        description: HumanDenom is the human readable denom.
        type: string
    type: object
  sqsdomain.CandidatePool:
    properties:
      id:
        type: integer
      tokenOutDenom:
        type: string
    type: object
  sqsdomain.CandidateRoute:
    properties:
      pools:
        items:
          $ref: '#/definitions/sqsdomain.CandidatePool'
        type: array
    type: object
  sqsdomain.CandidateRoutes:
    properties:
      routes:
        items:
          $ref: '#/definitions/sqsdomain.CandidateRoute'
        type: array
      uniquePoolIDs:
        additionalProperties:
          type: object
        type: object
    type: object
info:
  contact: {}
  title: Osmosis Sidecar Query Server Example API
  version: "1.0"
paths:
  /pools:
    get:
      description: |-
        Returns a list of pools if the IDs parameter is not given. Otherwise,
        it batch fetches specific pools by the given pool IDs parameter.
      operationId: get-pools
      parameters:
      - description: Comma-separated list of pool IDs to fetch, e.g., '1,2,3'
        in: query
        name: IDs
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of pool(s) details
          schema:
            items: {}
            type: array
      summary: Get pool(s) information
  /pools/canonical-orderbook:
    get:
      description: |-
        Returns the canonical orderbook pool ID for the given base and quote.
        if the pool ID is not found for the given pair, it returns an error.
        if the base or quote denom are not provided, it returns an error.
      parameters:
      - description: Base denom
        in: query
        name: base
        required: true
        type: string
      - description: Quote denom
        in: query
        name: quote
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Canonical Orderbook Pool ID for the given base and quote
          schema:
            type: uint64
      summary: Get canonical orderbook pool ID for the given base and quote.
  /pools/canonical-orderbooks:
    get:
      description: Returns the list of canonical orderbook pool ID entries for the
        given base and quote.
      produces:
      - application/json
      responses:
        "200":
          description: List of canonical orderbook ool ID entries for all base and
            quotes
          schema:
            items:
              $ref: '#/definitions/domain.CanonicalOrderBooksResult'
            type: array
      summary: Get entries for all supported orderbook base and quote denoms.
  /router/custom-direct-quote:
    get:
      description: Call does not search for the route rather directly computes the
        quote for the given poolID.
      operationId: get-direct-quote
      parameters:
      - description: String representation of the sdk.Coin for the token in.
        example: 5OSMO
        in: query
        name: tokenIn
        required: true
        type: string
      - description: String representing the list of the token denom out separated
          by comma.
        example: ATOM,USDC
        in: query
        name: tokenOutDenom
        required: true
        type: string
      - description: String representing list of the pool ID.
        example: 1,2,3
        in: query
        name: poolID
        required: true
        type: string
      - description: Boolean flag indicating whether to apply exponents to the spot
          price. False by default.
        in: query
        name: applyExponents
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: The computed best route quote
          schema: {}
      summary: Compute the quote for the given poolID
  /router/quote:
    get:
      description: returns the best quote it can compute for the given tokenIn and
        tokenOutDenom.
      operationId: get-route-quote
      parameters:
      - description: String representation of the sdk.Coin for the token in.
        in: query
        name: tokenIn
        required: true
        type: string
      - description: String representing the denom of the token out.
        in: query
        name: tokenOutDenom
        required: true
        type: string
      - description: Boolean flag indicating whether to return single routes (no splits).
          False (splits enabled) by default.
        in: query
        name: singleRoute
        type: boolean
      - description: Boolean flag indicating whether the given denoms are human readable
          or not. Human denoms get converted to chain internally
        in: query
        name: humanDenoms
        required: true
        type: boolean
      - description: Boolean flag indicating whether to apply exponents to the spot
          price. False by default.
        in: query
        name: applyExponents
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: The computed best route quote
          schema: {}
      summary: Optimal Quote
  /router/routes:
    get:
      description: returns all routes that can be used for routing from tokenIn to
        tokenOutDenom.
      operationId: get-router-routes
      parameters:
      - description: The string representation of the denom of the token in
        in: query
        name: tokenIn
        required: true
        type: string
      - description: The string representation of the denom of the token out
        in: query
        name: tokenOutDenom
        required: true
        type: string
      - description: Boolean flag indicating whether the given denoms are human readable
          or not. Human denoms get converted to chain internally
        in: query
        name: humanDenoms
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: An array of possible routing options
          schema:
            items:
              $ref: '#/definitions/sqsdomain.CandidateRoutes'
            type: array
      summary: Token Routing Information
  /tokens/metadata:
    get:
      description: |-
        returns token metadata with chain denom, human denom, and precision.
        For testnet, uses osmo-test-5 asset list. For mainnet, uses osmosis-1 asset list.
        See `config.json` and `config-testnet.json` in root for details.
      operationId: get-token-metadata
      parameters:
      - description: List of denoms where each can either be a human denom or a chain
          denom
        in: query
        name: denoms
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            additionalProperties:
              $ref: '#/definitions/domain.Token'
            type: object
      summary: Token Metadata
  /tokens/pool-metadata:
    get:
      description: |-
        returns pool denom metadata. As of today, this metadata is represented by the local market cap of the token computed over all Osmosis pools.
        For testnet, uses osmo-test-5 asset list. For mainnet, uses osmosis-1 asset list.
        See `config.json` and `config-testnet.json` in root for details.
      operationId: get-pool-denom-metadata
      parameters:
      - description: List of denoms where each can either be a human denom or a chain
          denom
        in: query
        name: denoms
        type: string
      - description: Boolean flag indicating whether the given denoms are human readable
          or not. Human denoms get converted to chain internally
        in: query
        name: humanDenoms
        required: true
        type: boolean
      produces:
      - application/json
      responses: {}
      summary: Pool Denom Metadata
  /tokens/prices:
    get:
      consumes:
      - application/json
      description: Given a list of base denominations, this endpoint returns the spot
        price with a system-configured quote denomination.
      parameters:
      - description: Comma-separated list of base denominations (human-readable or
          chain format based on humanDenoms parameter)
        in: query
        name: base
        required: true
        type: string
      - description: Specify true if input denominations are in human-readable format;
          defaults to false
        in: query
        name: humanDenoms
        type: boolean
      - description: Specify the pricing source. Values can be 0 (chain) or 1 (coingecko);
          default to 0 (chain)
        in: query
        name: pricingSource
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: A map where each key is a base denomination (on-chain format),
            containing another map with a key as the quote denomination (on-chain
            format) and the value as the spot price.
          schema:
            additionalProperties:
              additionalProperties:
                type: string
              type: object
            type: object
      summary: Get prices
swagger: "2.0"
